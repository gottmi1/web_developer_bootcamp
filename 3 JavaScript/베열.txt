push() = 끝에 추가
pop() = 끝 제거
shift() = 처음 제거
unshift() = 처음 추가

concat() = 2개 이상의 Array를 통합하지만 원본 중 어느것도 수정하지 않는다.

includes() = 배열에 특정 값이 있는지 참이나 거짓으로 알려줌

indexOf() = 해당 값의 index를 찾아줌

reverse() = 원본을 변경하며 역순으로 반환함

slice() = 배열의 일부를 복사함, 첫 숫자는 index 값인데 뒤 숫자를 포함하지 않고 앞에서 멈춤. 예를들어 slice(2,4)면 index 0 1 삭제 2,3만 남김 이런식. 음수 인덱스는 배열의 뒤부터 시작함

splice() = 원본을 변경하는 메서드. 
첫 번쨰 값은 시작할 index값이고 두번 째 값은 그로부터 몇 개를 삭제할 것인가, 세 번쨰 값은 혹시 추가할 것이라면 어떤 걸 추가할것인지이다.
.splice(3,0,"coke"); 이런식이면 index 3에서 아무것도 삭제하지 않고 뒤에 "coke"만 붙일 수 있음 근데 splice를 사용해서 중간에 무언가를 삽입하는 건 일반적으로 많이 하는 작업은 아님.

sort = sort만 사용하면 맨 첫 글자 오름차순으로 정렬


원본을 변경하는 메서드는 reverse(),splice()두 개 밖에 없다


참조 타입과 동일성 테스트

[1] === [1] 이런 게 false인 이유는 우리가 비교하는 건 값이 아니라 메모리의 참조이기 떄문이다.
=== 이게 true로 나오려면 비교하는 두 개가 서로 참조상태여야 함

const로 선언해도 push나 shift같은 메서드로 안에 있는 내용을 바꿀 수는 있다.
객체도 안에 있는 프로퍼티는 변경 가능.
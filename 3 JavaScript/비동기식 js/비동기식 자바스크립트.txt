콜 스택( call stack)

콜 스택은 자바스크립트 해석기가 다중 함수들을 호출하는 스크립트에서
그 위치 추적을 유지하기 위해 사용하는 메커니즘이다

스택이란 컴퓨터공학에서 기본 데이터의 스트럭처다.
후입선출 === 무언가 쌓여있는 그림을 연상하면 좋을듯

http://latentflip.com/loupe/?code=ZnVuY3Rpb24gbXVsdGlwbHkoeCx5KSB7CiAgICByZXR1cm4geCAqIHk7Cn0KCmZ1bmN0aW9uIHNxdWFyZSh4KSB7CiAgICByZXR1cm4gbXVsdGlwbHkoeCx4KTsKfQoKZnVuY3Rpb24gaXNSaWdodFRyaWFuZ2xlKGEsYixjKXsKICAgIHJldHVybiBzcXVhcmUoYSkgKyBzcXVhcmUoYikgPT09IHNxdWFyZShjKTsKfQoKaXNSaWdodFRyaWFuZ2xlKDMsNCw1KQ%3D%3D!!!

호출순서는 이렇게 된다


WebAPI와 단일 스레드

✔ 웹 API란 개발자가 브라우저 상에 쉽게 개발할 수 있도록 도와주는 객체 모음들입니다.
✔ 웹 API를 이용해서 돔요소를 조작하거나 일부 영역을 업데이트 시키거나 비디오나 오디오나 그래픽 요소를 사용할 수 있습니다.
✔ 웹 API는 객체 기반으로 동작하고 엔트리 포인트가 존재합니다.

자바스크립트는 싱글 스레드 방식이라 동시에 여러가지 일을 처리하지 못하고 한 줄 씩 처리한다.
중간에 셋타임아웃등의 함수를 만나면 브라우저로 넘긴다
만약 시간이 3000ms라면 js가 브라우저에게 3000ms후에 알려달라고 요청함

callback 지옥

상호 의존적인 작동을 위해 어떤 작업을 마쳐야만 다음 작업을 수행할 수 있도록 하려면 함수의 콜백 중첩이 많아진다

// searchMoviesAPI('amadeus', () => {
//     saveToMyDB(movies, () => {
//         //if it works, run this:
//     }, () => {
//         //if it doesn't work, run this:
//     })
// }, () => {
//     //if API is down, or request failed
// })

이런식으로 지저분해져서 가독성이 떨어진다.
promise와 비동기화 함수 asynk await으로 대체 가능하게 됐다.


new Promise

Promise는 객체이다. 항상 두개의 매개변수를 갖는다. resolve(성공) 과 reject(실패)이다.
promise의 상태는 총 3개이다 호출을 기다리는 pending 성공의 리절브 실패의 리젝트임


async함수

함수명 앞에 async를 붙이면 자동으로 promis를 리턴한다

await 키워드

이 키워드를 사용하면 앞 promise가 성공했을 때 실행되라고 할 수 있다

promise 안에서 에러를 다루려면 try,cathc 블럭이 있어야 함.
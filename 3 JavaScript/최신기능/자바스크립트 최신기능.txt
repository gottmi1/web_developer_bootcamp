기본 매개변수(디폴트 값)

매개변수가 선언되지 않았을 때의 기본값을 줄 수 있따.
function multi(a, b =1) {
  return a*b
}
multi(4) // 4
multi(4,5) // 20
두번째 인자를 입력하지 않으면 1을 반환할 거임

디폴트 값은 되도록이면 필수 값 뒤 쪽으로 배치하는 게 좋다고 한다


함수 호출시 스프레드 연산자

    const nums = [11,2,3,4,5,6,6,3,35,35,35,35];

    console.log(Math.max(nums)); // NaN nums = Arr이기 때문
    console.log(Math.max(...nums)); // 제대로 된다
    
    console.log(nums); // 숫자가 들어간 배열
    console.log(...nums); // 배열이 사라지고 숫자만 남음

    console.log(..."hello"); // hello를 분해시켜 h e l l o 로 받음

배열을 풀어서 받을 수 있다. concat할 때도 보통 [a,b,c,d,[a,b,c]]이런식으로 배열안에 새 배열이 추가 되는데 스프레드 연산자를 쓰면 인자만 제대로 받아짐


객체에서의 스트레드 연산자

    const feline = {legs: 4, family: 'Felidae'};
    const canine = {isFurry: true, family: "Caniane"};

    const felineBlack = {...feline, colr: "black"}
    console.log(felineBlack);
    이렇게 새로운 객체에 전에 있던 객체 + @를 할수도 있고

    const catDog = {...feline, ...canine}

    두 객체를 새로운 객체로 만들 수도 있다.
    console.log(catDog); // 이 경우 famliy속성이 겹치는데 겹치는 부분은 뒤에 온 객체의 속성을 따라감.

객체의 복사본을 만들 때 주로 사용한다. 특히 react같은 프레임워크를 사용할 때 많이 씀.
한 가지 정보를 가져와서 그 안에 추가해야할 것들이 있을떄 예를들어 id나 관리권한등 그럴 떄 쓸 수 있음.


레스트연산자

스프레드 연산자랑 비슷하게 생겼는데 개다름
보통 function sum(...args) {} 이런식으로 매개변수 자리에 받을건데
sum() 여기에 들어가는 인자가 몇개든 제대로 작동함
배열안에 넣어서 반환해줌

function goldMedal(gold, silver, bronze, ...other) {
  console.log(`금메달은 ${gold}`)
  console.log(`은메달은 ${silver}`)
  console.log(`동메달은 ${bronze}`)
  console.log(`목메달은 ${other}`)
}
이런 식으로 여러개의 인자를 받을 때 여러개 받아야할 경우 몇가지를 제외한 나머지는 다 몰아넣을 수 있음.

인자에 들어간다 -> 스프레드 연산자
매개변수,구조분해 할당에 들어간다 -> 레스트연산자


구조분해 할당

아는거임 여기서도 레스트 연산자를 쓸 수 있다.

객체 구조분해

각각의 키값을 불러서 변수로 만들 수 있지만 보통 이름을 바꿔준다.
변수 이름을 다르게 지정할 떈 :를 사용함.
없는 값에 접근할 지도 모를 때 기본 값을 정할 수 있음 이 때는 =를 사용

매개변수 분해

객체 구조분해를 매개변수자리에도 사용할 수 있다.
